const fs = require('fs');
const dotenv = require('dotenv');
const mongoose = require('mongoose');
const Tour = require('../../models/tourModel');

dotenv.config({
  path: './config.env',
});

const DB = process.env.DATABASE.replace(
  '<PASSWORD>',
  process.env.DATABASE_PASSWORD
);

mongoose
  .connect(DB, {
    useNewUrlParser: true,
    useCreateIndex: true,
    useFindAndModify: false,
  })
  .then(() => {
    console.log('DB connection successful üëç');
  });

// –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
const tours = JSON.parse(fs.readFileSync(`${__dirname}/tours.json`, 'utf-8')); // json -> js –æ–±—ä–µ–∫—Ç

// –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö –≤ db
const importData = async () => {
  try {
    await Tour.create(tours);
    console.log('data successfully loaded!');
  } catch (err) {
    console.log(err);
  }
  process.exit();
};

// —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
const deleteData = async () => {
  try {
    await Tour.deleteMany();
    console.log('data successfully deleted!');
  } catch (err) {
    console.log(err);
  }
  process.exit(); // –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
};

// –≤—ã–≤–æ–¥–∏—Ç –∑–Ω–∞—á–µ–Ω–∏—è (–∞ —Ç–æ—á–Ω–µ–µ –ø—É—Ç—å, –æ—Ç–∫—É–¥–∞ –æ–Ω–∏ –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã), –≤–≤–æ–¥–∏–º—ã–µ –≤ –∫–æ–Ω—Å–æ–ª–∏. —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
console.log(process.argv);

if (process.argv[2] === '--import') {
  importData();
} else if (process.argv[2] === '--delete') {
  deleteData();
}
